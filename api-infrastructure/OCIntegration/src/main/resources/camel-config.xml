<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Pattern Processors -->
	<bean id="OCIntegration" class="com.csc.eip.pattern.MessageTranslator" />
	
	<!-- Custom Aggregation Strategy -->
	<bean id="aggregationStrategy" class="com.csc.eip.strategy.CollectionAggregationStrategy" />

	<camelContext id="camelContext" streamCache="true"
		xmlns="http://camel.apache.org/schema/spring">

		<restConfiguration component="servlet" host="localhost"
			bindingMode="json">
			<dataFormatProperty key="prettyPrint" value="true" />
		</restConfiguration>

		<rest>
			<description>URI TRANSFORMATION PATTERN</description>
			<post uri="/OCIntegration" consumes="application/json" produces="application/json"
				type="com.csc.eip.bo.Message" outType="com.csc.eip.bo.Message">
				<description>Replace all pattern matches in a JSON Message</description>
				<to uri="bean:OCIntegration?method=replacePattern(${body}, ${header.pattern}, ${header.replacement})" />
			</post>
		</rest>

		<rest>
			<description>AGGREGATION INTEGRATION PATTERN</description>
			<get uri="/OCIntegration" produces="application/json" outType="com.csc.eip.bo.Message">
				<description>Aggregate the response from two or more rest services</description>
				<route>
					<removeHeaders pattern="CamelHttp*"></removeHeaders>
					<enrich uri="direct:serviceAggregate" />
				</route>
			</get>
		</rest>

		<route>
			<from uri="direct:serviceAggregate" />
			<recipientList delimiter="," strategyRef="aggregationStrategy"
				parallelProcessing="true">
				<header>URIS</header>
			</recipientList>
		</route>

	</camelContext>

</beans>