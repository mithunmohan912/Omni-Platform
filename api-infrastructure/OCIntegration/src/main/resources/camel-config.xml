<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Pattern Processors -->
	<bean id="messageTranslator" class="com.csc.eip.pattern.MessageTranslator" />
	
	<!-- Custom Aggregation Strategy -->
	<bean id="aggregationStrategy" class="com.csc.eip.strategy.CollectionAggregationStrategy">
		<property name="mergeItemsString" value="${MERGE_ITEMS_INTO_ARRAY}" />
		<property name="addUpItemsString" value="${ADD_UP_ITEMS}" />
		<property name="paramsListString" value="${PARAM_LIST}" />
		<property name="removeFromParentString" value="${REMOVE_FROM_PARENT}" />
		<property name="addTheseItemsFromOptionsString" value="${ADD_ITEMS_FROM_OPTIONS}" />
	</bean>

	<!-- Publish/Subscribe Channel -->
	<bean id="publish" class="com.csc.eip.pattern.PublishSubscribe">
		<property name="factory" ref="connectionFactory" />
	</bean>

	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/application.properties</value>
		</property>
	</bean>

	<bean id="connectionFactory" class="com.rabbitmq.client.ConnectionFactory">
		<property name="host" value="${RABBITMQ_HOST}"></property>
		<property name="username" value="${RABBITMQ_USERNAME}"></property>
		<property name="password" value="${RABBITMQ_PASSWORD}"></property>
		<property name="port" value="${RABBITMQ_PORT}"></property>
	</bean>

	<!-- SSLContextParameters for AIA -->
	<camel:sslContextParameters id="sslContextParametersAia">	
		<camel:keyManagers keyPassword="">
			<camel:keyStore resource="/home/ocintegration/security/aia/crt/omni-demo-client.p12" password="" type="pkcs12"/>
		</camel:keyManagers>		
	</camel:sslContextParameters>

	<bean id="https4-aia" class="org.apache.camel.component.http4.HttpComponent">
	   <property name="sslContextParameters" ref="sslContextParametersAia"/>
	</bean>
	
	<!-- API Proxy Routers -->
	<!-- APIConnect APIs -->
	<!-- Development -->
	<bean id="apiProxyRouterOmniChannelDevAia" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4-aia://ec2-52-17-9-134.eu-west-1.compute.amazonaws.com/csc/insurance"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/aia"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://ec2-52-17-9-134.eu-west-1.compute.amazonaws.com/csc/insurance" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/aia"/>
			</map>
		</property>		
		<property name="customHeaders">
			<map>
				<entry key="NSP_USERID" value="gtmoni"/>
			</map>
		</property>
	</bean>
	<bean id="apiProxyRouterOmniChannelDevIntegral" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="http4://ec2-54-153-183-136.ap-southeast-2.compute.amazonaws.com/omni/v300/runtime-web/omni/service"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/integral"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="http://ec2-54-153-183-136.ap-southeast-2.compute.amazonaws.com:80/omni/v300/runtime-web/omni/service" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/integral"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevPoint" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pijweb02.cm-csc.com/ux-point-api"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/point"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://pijweb02.cm-csc.com/ux-point-api" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/point"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevRma" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="http4://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/rmaintegration"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/rma"/>
		<property name="customHeaders">
			<map>
				<entry key="alpha" value="62683e70233ad152"/>
				<entry key="dsn" value="rmAMainStaging16.2"/>
			</map>
		</property>
		<property name="apiEndpointRefs">
			<map>
				<entry key="http://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/rmaintegration" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/rma"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevClaimsFnolRma" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="http4://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/fnol/api"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/claims/fnol/rma"/>
		<property name="customHeaders">
			<map>
				<entry key="Authorization" value="Basic Y3NjOnJtQU1haW5TdGFnaW5nMTYuMg=="/>
			</map>
		</property>
		<property name="apiEndpointRefs">
			<map>
				<entry key="http://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/fnol/api" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/claims/fnol/rma"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevBillingPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://billing.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/billing/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/search/pb360"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevPartyPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pb360-parties.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/party/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/search/pb360"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterOmniChannelDevSearchPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pb360-search.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/omnichannel/dev/search/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/omnichannel-dev/omnichannel/dev/search/pb360"/>
			</map>
		</property>
	</bean>
	
	<!-- Reference -->
	<!-- Development -->
	<bean id="apiProxyRouterReferenceDevAia" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4-aia://ec2-52-17-9-134.eu-west-1.compute.amazonaws.com/csc/insurance"/>
		<property name="apiProxyRoute" value="/reference/dev/aia"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://ec2-52-17-9-134.eu-west-1.compute.amazonaws.com/csc/insurance" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/aia"/>
			</map>
		</property>		
		<property name="customHeaders">
			<map>
				<entry key="NSP_USERID" value="gtmoni"/>
			</map>
		</property>
	</bean>
	<bean id="apiProxyRouterReferenceDevIntegral" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="http4://ec2-54-153-183-136.ap-southeast-2.compute.amazonaws.com/omni/v300/runtime-web/omni/service"/>
		<property name="apiProxyRoute" value="/reference/dev/integral"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="http://ec2-54-153-183-136.ap-southeast-2.compute.amazonaws.com:80/omni/v300/runtime-web/omni/service" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/integral"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterReferenceDevPoint" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pijweb02.cm-csc.com/ux-point-api"/>
		<property name="apiProxyRoute" value="/reference/dev/point"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://pijweb02.cm-csc.com/ux-point-api" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/point"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterReferenceDevRma" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="http4://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/rmaintegration"/>
		<property name="apiProxyRoute" value="/reference/dev/rma"/>
		<property name="customHeaders">
			<map>
				<entry key="alpha" value="62683e70233ad152"/>
				<entry key="dsn" value="rmAMainStaging16.2"/>
			</map>
		</property>
		<property name="apiEndpointRefs">
			<map>
				<entry key="http://ec2-54-186-1-5.us-west-2.compute.amazonaws.com/rmaintegration" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/rma"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterReferenceDevBillingPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://billing.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/reference/dev/billing/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/search/pb360"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterReferenceDevPartyPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pb360-parties.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/reference/dev/party/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/search/pb360"/>
			</map>
		</property>		
	</bean>
	<bean id="apiProxyRouterReferenceDevSearchPb360" class="com.csc.eip.route.ApiProxyRouter">
		<property name="apiProxyEndpoint" value="https4://pb360-search.mybluemix.net/v1"/>
		<property name="apiProxyRoute" value="/reference/dev/search/pb360"/>
		<property name="apiEndpointRefs">
			<map>
				<entry key="https://billing.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/billing/pb360"/>
				<entry key="https://pb360-parties.mybluemix.net/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/party/pb360"/>
				<entry key="https://pb360-search.mybluemix.net:80/v1" value="https://api.us.apiconnect.ibmcloud.com/csc-insurance-api-development/insurance_reference_api/reference/dev/search/pb360"/>
			</map>
		</property>
	</bean>

		




	<!-- Auth Routers -->
	<bean id="apiProxyAuthRouter" class="com.csc.eip.route.ApiProxyAuthRouter"/>
	<bean id="authnTokenRouter" class="com.csc.eip.route.AuthnTokenRouter"/>
	<!--
	<bean id="authzRouter" class="com.csc.eip.route.AuthzRouter"/>
	<bean id="authnDirectoryRouter" class="com.csc.eip.route.AuthnDirectoryRouter"/>
	<bean id="policyAdminAuthnRouter" class="com.csc.eip.route.PolicyAdminAuthnRouter"/>
	-->


	<camelContext id="camelContext" streamCache="true"
		xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties"
			location="classpath:/application.properties" />

		<routeBuilder ref="apiProxyAuthRouter"/> 
		<routeBuilder ref="authnTokenRouter"/> 
		<!--
		<routeBuilder ref="authzRouter"/> 
		<routeBuilder ref="authnDirectoryRouter"/> 
		<routeBuilder ref="policyAdminAuthnRouter"/> 
		-->

		
		<!-- APIConnect APIs -->
		<!-- OmniChannel -->
		<routeBuilder ref="apiProxyRouterOmniChannelDevAia"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevIntegral"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevPoint"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevRma"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevClaimsFnolRma"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevBillingPb360"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevPartyPb360"/>
		<routeBuilder ref="apiProxyRouterOmniChannelDevSearchPb360"/>


		<!-- Reference -->
		<routeBuilder ref="apiProxyRouterReferenceDevAia"/>
		<routeBuilder ref="apiProxyRouterReferenceDevIntegral"/>
		<routeBuilder ref="apiProxyRouterReferenceDevPoint"/>
		<routeBuilder ref="apiProxyRouterReferenceDevRma"/>
		<routeBuilder ref="apiProxyRouterReferenceDevBillingPb360"/>
		<routeBuilder ref="apiProxyRouterReferenceDevPartyPb360"/>
		<routeBuilder ref="apiProxyRouterReferenceDevSearchPb360"/>
		
		
		<restConfiguration component="jetty" host="0.0.0.0" port="8888" bindingMode="json">
			<dataFormatProperty key="prettyPrint" value="true" />
		</restConfiguration>

		<rest>
			<description>Message Translator Pattern</description>
			<post uri="/ocintegration/messageTranslator" 
				consumes="application/json" type="com.csc.eip.bo.Message" 
				produces="application/json" outType="com.csc.eip.bo.Message">
				<description>Replace all pattern matches in a JSON message</description>
				<route>
					<log message="/messageTranslator route started"/>
					<log message="Pattern: ${header.Pattern}"/>
					<log message="Replacement: ${header.Replacement}"/>
					<to uri="bean:messageTranslator?method=replacePattern(${body}, ${header.Pattern}, ${header.Replacement})" />
					<log message="/messageTranslator route ended"/>
				</route>
			</post>
		</rest>
		
		<rest>
			<description>Aggregator Pattern</description>
			<get uri="/ocintegration/aggregator" 
				produces="application/json" outType="com.csc.eip.bo.Message">
				<description>Combine the responses from multiple APIs into a single message</description>
				<route>
					<log message="/aggregator route started"/>
					<pipeline>
						<removeHeaders pattern="CamelHttp*"/>
						<setHeader headerName="CamelHttpMethod"><constant>GET</constant></setHeader>
						<enrich><constant>direct:serviceAggregate</constant></enrich>
					</pipeline>
					<log message="/aggregator route ended"/>
				</route>
			</get>
		</rest>

		<!--	
		<rest>
			<description>Publish Subscribe Channel Pattern</description>
			<post uri="/publish" produces="application/json"
				type="com.csc.eip.bo.Message" outType="com.csc.eip.bo.Message">
				<description>Deliver message to multiple consumers who have subscribed for the activity/event</description>
				<route>
					<to
						uri="bean:publish?method=publishMessage(${body}, ${properties:{${header.activity}}}, ${properties:{EXCHANGE_NAME}})" />
				</route>
			</post>
		</rest>

		<rest>
			<description>Pipes and Filter Pattern</description>
			<post uri="/pipeline" produces="application/json"
				type="com.csc.eip.bo.Message" outType="com.csc.eip.bo.Message">
				<description>Processing across multiple independent endpoint instances which are chained together</description>
				<route>
					<pipeline>
						<to
							uri="bean:messageTranslator?method=replacePattern(${body}, ${header.pattern}, ${header.replacement})" />
						<to
							uri="bean:publish?method=publishMessage(${body}, ${properties:{${header.activity}}}, ${properties:{EXCHANGE_NAME}})" />
					</pipeline>
				</route>
			</post>
		</rest>
		-->

		<route>
			<from uri="direct:serviceAggregate" />
			<recipientList delimiter="," strategyRef="aggregationStrategy"
				parallelProcessing="true" stopOnException="true">
				<header>RecipientList</header>
			</recipientList>
		</route>

	</camelContext>

</beans>