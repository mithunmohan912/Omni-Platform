<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- Spring Configuration Start -->

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config/web-application-context.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
      		<param-name>dispatchOptionsRequest</param-name>
      		<param-value>true</param-value>
    	</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- Spring Configuration End -->

	<!-- CSRF configuration Start -->
	
	<!-- CSRFGuard context parameters and Listener-->
	<context-param>
		<param-name>Owasp.CsrfGuard.Config</param-name>
		<param-value>WEB-INF/config/csrfGuard/csrfguardConfig.properties</param-value>
	</context-param>
	
	<context-param>
		<param-name>Owasp.CsrfGuard.Config.Print</param-name>
		<param-value>false</param-value>
	</context-param>

	<listener>
		<listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
	</listener>

	<filter>
		<filter-name>CSRFGuard</filter-name>
		<filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CSRFGuard</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- OWASP JAVASCRIPT SERVLET -->
	<servlet>
		<servlet-name>JavaScriptServlet</servlet-name>
		<servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
		<init-param>
			<param-name>source-file</param-name>
			<param-value>WEB-INF/config/csrfGuard/csrfguard.js</param-value>
		</init-param>
		<init-param>
			<param-name>inject-into-forms</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>inject-into-attributes</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>domain-strict</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>referer-pattern</param-name>
			<param-value>.*localhost:80.*</param-value>
		</init-param>
		<init-param>
			<param-name>x-requested-with</param-name>
			<param-value>OWASP CSRFGuard Project</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>JavaScriptServlet</servlet-name>
		<url-pattern>/JavaScriptServlet</url-pattern>
	</servlet-mapping>
	
	<!-- CSRF configuration End -->

	<!--Spring Security Filter Chain. The <http> namespace creates a Spring bean with this name and the DelegatingFilterProxy will use this filter-name to delegate to the bean. -->

    <!-- <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->

	<filter>
		<filter-name>XSS</filter-name>
		<filter-class>com.csc.cscip.ux.common.security.util.CrossScriptingFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>XSS</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
