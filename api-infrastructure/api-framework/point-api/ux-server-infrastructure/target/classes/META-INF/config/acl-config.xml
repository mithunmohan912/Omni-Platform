<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
   	   http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- Enables Method Security and Expression-based access control -->
	<security:global-method-security pre-post-annotations="enabled">
		<!-- Enables custom expression handler -->
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<!-- A customized expression handler permissionEvaluator: a reference to a custom PermissionEvaluator roleHierarchy: defines the role order -->

	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<property name="permissionEvaluator" ref="permissionEvaluator" />
		<property name="roleHierarchy" ref="roleHierarchy" />
	</bean>

	<!-- Declare a custom PermissionEvaluator implementation -->
	<bean class="com.csc.cscip.ux.common.security.acl.CustomPermissionEvaluator" id="permissionEvaluator">
		<constructor-arg ref="aclService" />
	</bean>

	<!-- Declare an ACL service -->
	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService" id="aclService">
		<constructor-arg ref="dataSourceUX" />
		<constructor-arg ref="lookupStrategy" />
		<constructor-arg ref="aclCache" />
	</bean>

	<!-- Declare a lookup strategy -->
	<bean id="lookupStrategy" class="com.csc.cscip.ux.common.security.acl.CustomLookupStrategy">
		<constructor-arg ref="dataSourceUX" />
		<constructor-arg ref="aclCache" />
		<constructor-arg ref="aclAuthorizationStrategy" />
		<constructor-arg ref="auditLogger" />
		<constructor-arg ref="cacheManager" />
	</bean>


	<!-- Declare an ACL cache -->
	<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg>
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager" ref="ehcache" />
				<!-- <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/> -->
				<!-- </property> -->
				<property name="cacheName" value="aclCache" />
			</bean>
		</constructor-arg>
	</bean>


	<!-- Declare an acl authorization strategy -->
	<bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
					<constructor-arg value="ROLE_ADMIN" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<!-- Declare an audit logger -->
	<bean id="auditLogger" class="org.springframework.security.acls.domain.ConsoleAuditLogger" />

	<!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
	<bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_USER
				ROLE_USER > ROLE_VISITOR
			</value>
		</property>
	</bean>
</beans>