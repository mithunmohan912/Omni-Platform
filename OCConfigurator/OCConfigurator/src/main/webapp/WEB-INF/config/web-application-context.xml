<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:camel="http://camel.apache.org/schema/spring" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
	
	<util:properties id="screenProperties" location="classpath:screens.properties" />
	<bean class="com.csc.ux.canvas.service.metamodel.MetaModelTypes" p:properties-ref="screenProperties" /> 

	<util:properties id="app-config" location="classpath:OCConfigurator-config.properties" />

	<!-- Imports the configurations of the different infrastructure systems of the application -->
	<import resource="spring-mvc.xml" />
	<import resource="database-config.xml" />
	<import resource="classpath:META-INF/config/application-context.xml" />

	<context:annotation-config />
	<context:component-scan base-package="com.csc.ux.canvas" />

	<!-- Let Spring create the Camel context and the Camel template, including life cycle management such 
		as starting and stopping them -->
	<camel:camelContext id="camelContext">
		<camel:template id="camelTemplate" />
		<camel:consumerTemplate id="consumerTemplate" />
		
		<camel:endpoint id="ALRImplementerSaveAttributesEndPoint" uri="${ALRImplementerSaveAttributesEndPoint}" />
		<camel:endpoint id="ALRImplementerSaveHoversEndPoint" uri="${ALRImplementerSaveHoversEndPoint}" />
		<camel:endpoint id="RulesEndPoint" uri="${RulesEndPoint}" />

		<camel:route id="SaveAttributes">
			<camel:from uri="direct:SaveAttributes" />
			<camel:setHeader headerName="Content-Type">
				<camel:constant>text/xml</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="CamelHttpMethod">
				<camel:constant>POST</camel:constant>
			</camel:setHeader>
			<camel:to ref="ALRImplementerSaveAttributesEndPoint" />
		</camel:route>
		
		<camel:route id="SaveHovers">
			<camel:from uri="direct:SaveHovers" />
			<camel:setHeader headerName="Content-Type">
				<camel:constant>text/xml</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="CamelHttpMethod">
				<camel:constant>POST</camel:constant>
			</camel:setHeader>
			<camel:to ref="ALRImplementerSaveHoversEndPoint" />
		</camel:route>
		
		<camel:route id="LaunchRules">
			<camel:from uri="direct:LaunchRules" />
			<camel:setHeader headerName="Content-Type">
				<camel:constant>application/x-www-form-urlencoded</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="CamelHttpMethod">
				<camel:constant>POST</camel:constant>
			</camel:setHeader>
			<camel:to ref="RulesEndPoint" />
		</camel:route>
		
		<camel:route id="jdbcdata">
			<camel:from uri="direct:jdbcdata" />
			<camel:to uri="jdbc:dataSourceUX" />
		</camel:route>
	</camel:camelContext>
</beans>